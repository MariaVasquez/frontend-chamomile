# Node.js

# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main

pool:
  name: default

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
      displayName: 'Install Node.js'

    - script: |
        cd Chamomile/
        npm install -g @angular/cli@16.2.14
        npm install
        ng build
      displayName: 'npm install and build'
      workingDirectory: '$(Build.SourcesDirectory)'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/chamomile/'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        ArtifactName: 'drop'
        publishLocation: 'Container'
        MaxArtifactSize: 0

- stage: Development
  displayName: 'Deploy to Development'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeploymentDevelopment
    pool:
      vmImage: 'ubuntu-latest'
    environment: Development
    strategy:
      runOnce:
        deploy:
          steps:
          - task: Docker@2
            displayName: 'Build and push nginx image'
            inputs:
              command: 'buildAndPush'
              azureSubscriptionEndpoint: '<Tu conexión a Azure>'
              dockerRegistryEndpoint: '<Tu registro de Docker>'
              dockerFile: '$(System.DefaultWorkingDirectory)/path/to/nginx/Dockerfile'
              imageName: 'nombre_de_tu_imagen_nginx:latest'
              tags: |
                $(Build.BuildId)
                latest
          - task: Docker@2
            displayName: 'Run nginx container'
            inputs:
              command: 'run'
              azureSubscriptionEndpoint: '<Tu conexión a Azure>'
              containerRegistry: '<Tu registro de Docker>'
              imageName: 'nombre_de_tu_imagen_nginx:latest'
              ports: '80:80'
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'Suscripción de Azure 1(3a9ee721-4423-43cb-9efb-ddaefd3c364e)'
              appType: 'webAppLinux'
              appName: 'chmmile'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              runtimeStack: 'NODE|18-lts'

- stage: Acceptance
  dependsOn: [ Development ]
  displayName: 'Deploy to Acceptance'
  jobs:
    - job:  DeployToAcceptance
      displayName: 'DeployAcceptance'
      steps:
      - script: echo Deploying to Acceptance

- stage: Production
  dependsOn: [ Acceptance ]
  displayName: 'Deploy to Production'
  jobs:
    - deployment: DeployProduction
      pool:
        vmImage: 'ubuntu-latest'
      environment: Production
      strategy:
        runOnce:
          deploy:
            steps:
            - script: echo Deploying to Production
